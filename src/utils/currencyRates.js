// src/utils/currencyRates.js

// Mock exchange rates relative to USD (base currency for mock prices)
export const MOCK_EXCHANGE_RATES = {
  USD: 1.0,
  INR: 83.5, // Indian Rupee
  EUR: 0.92, // Euro
  GBP: 0.79, // British Pound
  JPY: 156.0, // Japanese Yen
  CAD: 1.36, // Canadian Dollar
  AUD: 1.50, // Australian Dollar
  CNY: 7.26, // Chinese Yuan
  BRL: 5.46, // Brazilian Real
  MXN: 18.23, // Mexican Peso
};

// Mapping of country names (as used in onboarding) to currency symbols and codes
export const COUNTRY_CURRENCY_MAP = {
  'United States': { symbol: '$', code: 'USD' },
  'India': { symbol: '₹', code: 'INR' },
  'Canada': { symbol: 'C$', code: 'CAD' },
  'United Kingdom': { symbol: '£', code: 'GBP' },
  'Australia': { symbol: 'A$', code: 'AUD' },
  'Germany': { symbol: '€', code: 'EUR' },
  'France': { symbol: '€', code: 'EUR' },
  'Japan': { symbol: '¥', code: 'JPY' },
  'Brazil': { symbol: 'R$', code: 'BRL' },
  'Mexico': { symbol: 'Mex$', code: 'MXN' },
  // Add more countries and their respective currencies as needed
  // For simplicity, for countries not explicitly listed, we can default to USD or a generic symbol.
  'Afghanistan': { symbol: '؋', code: 'AFN' },
  'Albania': { symbol: 'Lek', code: 'ALL' },
  'Algeria': { symbol: 'DA', code: 'DZD' },
  'Andorra': { symbol: '€', code: 'EUR' },
  'Angola': { symbol: 'Kz', code: 'AOA' },
  'Antigua and Barbuda': { symbol: '$', code: 'XCD' },
  'Argentina': { symbol: '$', code: 'ARS' },
  'Armenia': { symbol: '֏', code: 'AMD' },
  'Austria': { symbol: '€', code: 'EUR' },
  'Azerbaijan': { symbol: '₼', code: 'AZN' },
  'Bahamas': { symbol: '$', code: 'BSD' },
  'Bahrain': { symbol: '.د.ب', code: 'BHD' },
  'Bangladesh': { symbol: '৳', code: 'BDT' },
  'Barbados': { symbol: '$', code: 'BBD' },
  'Belarus': { symbol: 'Br', code: 'BYN' },
  'Belgium': { symbol: '€', code: 'EUR' },
  'Belize': { symbol: 'BZ$', code: 'BZD' },
  'Benin': { symbol: 'CFA', code: 'XOF' },
  'Bhutan': { symbol: 'Nu.', code: 'BTN' },
  'Bolivia': { symbol: 'Bs.', code: 'BOB' },
  'Bosnia and Herzegovina': { symbol: 'KM', code: 'BAM' },
  'Botswana': { symbol: 'P', code: 'BWP' },
  'Brunei Darussalam': { symbol: '$', code: 'BND' },
  'Bulgaria': { symbol: 'лв', code: 'BGN' },
  'Burkina Faso': { symbol: 'CFA', code: 'XOF' },
  'Burundi': { symbol: 'FBu', code: 'BIF' },
  'Cabo Verde': { symbol: '$', code: 'CVE' },
  'Cambodia': { symbol: '៛', code: 'KHR' },
  'Cameroon': { symbol: 'CFA', code: 'XAF' },
  'Central African Republic': { symbol: 'CFA', code: 'XAF' },
  'Chad': { symbol: 'CFA', code: 'XAF' },
  'Chile': { symbol: '$', code: 'CLP' },
  'China': { symbol: '¥', code: 'CNY' },
  'Colombia': { symbol: '$', code: 'COP' },
  'Comoros': { symbol: 'CF', code: 'KMF' },
  'Congo (Brazzaville)': { symbol: 'CFA', code: 'XAF' },
  'Congo (Kinshasa)': { symbol: 'FC', code: 'CDF' },
  'Costa Rica': { symbol: '₡', code: 'CRC' },
  'Côte d\'Ivoire': { symbol: 'CFA', code: 'XOF' },
  'Croatia': { symbol: '€', code: 'EUR' },
  'Cuba': { symbol: '₱', code: 'CUP' },
  'Cyprus': { symbol: '€', code: 'EUR' },
  'Czechia': { symbol: 'Kč', code: 'CZK' },
  'Denmark': { symbol: 'kr.', code: 'DKK' },
  'Djibouti': { symbol: 'Fdj', code: 'DJF' },
  'Dominica': { symbol: '$', code: 'XCD' },
  'Dominican Republic': { symbol: 'RD$', code: 'DOP' },
  'Ecuador': { symbol: '$', code: 'USD' },
  'Egypt': { symbol: 'E£', code: 'EGP' },
  'El Salvador': { symbol: '$', code: 'USD' },
  'Equatorial Guinea': { symbol: 'CFA', code: 'XAF' },
  'Eritrea': { symbol: 'Nfk', code: 'ERN' },
  'Estonia': { symbol: '€', code: 'EUR' },
  'Eswatini': { symbol: 'L', code: 'SZL' },
  'Ethiopia': { symbol: 'Br', code: 'ETB' },
  'Fiji': { symbol: 'FJ$', code: 'FJD' },
  'Finland': { symbol: '€', code: 'EUR' },
  'Gabon': { symbol: 'CFA', code: 'XAF' },
  'Gambia': { symbol: 'D', code: 'GMD' },
  'Georgia': { symbol: '₾', code: 'GEL' },
  'Ghana': { symbol: 'GH₵', code: 'GHS' },
  'Greece': { symbol: '€', code: 'EUR' },
  'Grenada': { symbol: '$', code: 'XCD' },
  'Guatemala': { symbol: 'Q', code: 'GTQ' },
  'Guinea': { symbol: 'FG', code: 'GNF' },
  'Guinea-Bissau': { symbol: 'CFA', code: 'XOF' },
  'Guyana': { symbol: '$', code: 'GYD' },
  'Haiti': { symbol: 'G', code: 'HTG' },
  'Honduras': { symbol: 'L', code: 'HNL' },
  'Hungary': { symbol: 'Ft', code: 'HUF' },
  'Iceland': { symbol: 'kr', code: 'ISK' },
  'Indonesia': { symbol: 'Rp', code: 'IDR' },
  'Iran': { symbol: '﷼', code: 'IRR' },
  'Iraq': { symbol: 'ع.د', code: 'IQD' },
  'Ireland': { symbol: '€', code: 'EUR' },
  'Israel': { symbol: '₪', code: 'ILS' },
  'Italy': { symbol: '€', code: 'EUR' },
  'Jamaica': { symbol: 'JM$', code: 'JMD' },
  'Jordan': { symbol: 'د.ا', code: 'JOD' },
  'Kazakhstan': { symbol: '₸', code: 'KZT' },
  'Kenya': { symbol: 'KSh', code: 'KES' },
  'Kiribati': { symbol: '$', code: 'AUD' },
  'Kuwait': { symbol: 'د.ك', code: 'KWD' },
  'Kyrgyzstan': { symbol: 'сом', code: 'KGS' },
  'Laos': { symbol: '₭', code: 'LAK' },
  'Latvia': { symbol: '€', code: 'EUR' },
  'Lebanon': { symbol: 'ل.ل', code: 'LBP' },
  'Lesotho': { symbol: 'L', code: 'LSL' },
  'Liberia': { symbol: 'L$', code: 'LRD' },
  'Libya': { symbol: 'ل.د', code: 'LYD' },
  'Liechtenstein': { symbol: 'CHF', code: 'CHF' },
  'Lithuania': { symbol: '€', code: 'EUR' },
  'Luxembourg': { symbol: '€', code: 'EUR' },
  'Madagascar': { symbol: 'Ar', code: 'MGA' },
  'Malawi': { symbol: 'MK', code: 'MWK' },
  'Malaysia': { symbol: 'RM', code: 'MYR' },
  'Maldives': { symbol: '.ރ', code: 'MVR' },
  'Mali': { symbol: 'CFA', code: 'XOF' },
  'Malta': { symbol: '€', code: 'EUR' },
  'Marshall Islands': { symbol: '$', code: 'USD' },
  'Mauritania': { symbol: 'UM', code: 'MRU' },
  'Mauritius': { symbol: '₨', code: 'MUR' },
  'Micronesia (Federated States of)': { symbol: '$', code: 'USD' },
  'Moldova': { symbol: 'L', code: 'MDL' },
  'Monaco': { symbol: '€', code: 'EUR' },
  'Mongolia': { symbol: '₮', code: 'MNT' },
  'Montenegro': { symbol: '€', code: 'EUR' },
  'Morocco': { symbol: 'د.م.', code: 'MAD' },
  'Mozambique': { symbol: 'MT', code: 'MZN' },
  'Myanmar (Burma)': { symbol: 'Ks', code: 'MMK' },
  'Namibia': { symbol: '$', code: 'NAD' },
  'Nauru': { symbol: '$', code: 'AUD' },
  'Nepal': { symbol: '₨', code: 'NPR' },
  'Netherlands': { symbol: '€', code: 'EUR' },
  'New Zealand': { symbol: '$', code: 'NZD' },
  'Nicaragua': { symbol: 'C$', code: 'NIO' },
  'Niger': { symbol: 'CFA', code: 'XOF' },
  'Nigeria': { symbol: '₦', code: 'NGN' },
  'North Korea': { symbol: '₩', code: 'KPW' },
  'North Macedonia': { symbol: 'ден', code: 'MKD' },
  'Norway': { symbol: 'kr', code: 'NOK' },
  'Oman': { symbol: 'ر.ع.', code: 'OMR' },
  'Pakistan': { symbol: '₨', code: 'PKR' },
  'Palau': { symbol: '$', code: 'USD' },
  'Palestine, State of': { symbol: '₪', code: 'ILS' }, // Or JOD
  'Panama': { symbol: 'B/.', code: 'PAB' }, // Also USD
  'Papua New Guinea': { symbol: 'K', code: 'PGK' },
  'Paraguay': { symbol: '₲', code: 'PYG' },
  'Peru': { symbol: 'S/.', code: 'PEN' },
  'Philippines': { symbol: '₱', code: 'PHP' },
  'Poland': { symbol: 'zł', code: 'PLN' },
  'Portugal': { symbol: '€', code: 'EUR' },
  'Qatar': { symbol: 'ر.ق', code: 'QAR' },
  'Romania': { symbol: 'lei', code: 'RON' },
  'Russia': { symbol: '₽', code: 'RUB' },
  'Rwanda': { symbol: 'Fr', code: 'RWF' },
  'Saint Kitts and Nevis': { symbol: '$', code: 'XCD' },
  'Saint Lucia': { symbol: '$', code: 'XCD' },
  'Saint Vincent and the Grenadines': { symbol: '$', code: 'XCD' },
  'Samoa': { symbol: 'T', code: 'WST' },
  'San Marino': { symbol: '€', code: 'EUR' },
  'Sao Tome and Principe': { symbol: 'Db', code: 'STD' }, // Or STN
  'Saudi Arabia': { symbol: '﷼', code: 'SAR' },
  'Senegal': { symbol: 'CFA', code: 'XOF' },
  'Serbia': { symbol: 'дин', code: 'RSD' },
  'Seychelles': { symbol: '₨', code: 'SCR' },
  'Sierra Leone': { symbol: 'Le', code: 'SLL' }, // Or SLL
  'Singapore': { symbol: 'S$', code: 'SGD' },
  'Slovakia': { symbol: '€', code: 'EUR' },
  'Slovenia': { symbol: '€', code: 'EUR' },
  'Solomon Islands': { symbol: '$', code: 'SBD' },
  'Somalia': { symbol: 'Sh', code: 'SOS' },
  'South Africa': { symbol: 'R', code: 'ZAR' },
  'South Korea': { symbol: '₩', code: 'KRW' },
  'South Sudan': { symbol: '£', code: 'SSP' },
  'Spain': { symbol: '€', code: 'EUR' },
  'Sri Lanka': { symbol: 'Rs', code: 'LKR' },
  'Sudan': { symbol: 'ج.س.', code: 'SDG' },
  'Suriname': { symbol: '$', code: 'SRD' },
  'Sweden': { symbol: 'kr', code: 'SEK' },
  'Switzerland': { symbol: 'CHF', code: 'CHF' },
  'Syria': { symbol: '£', code: 'SYP' },
  'Taiwan': { symbol: 'NT$', code: 'TWD' },
  'Tajikistan': { symbol: 'ЅМ', code: 'TJS' },
  'Tanzania': { symbol: 'Sh', code: 'TZS' },
  'Thailand': { symbol: '฿', code: 'THB' },
  'Timor-Leste': { symbol: '$', code: 'USD' },
  'Togo': { symbol: 'CFA', code: 'XOF' },
  'Tonga': { symbol: 'T$', code: 'TOP' },
  'Trinidad and Tobago': { symbol: 'TT$', code: 'TTD' },
  'Tunisia': { symbol: 'د.ت', code: 'TND' },
  'Turkey': { symbol: '₺', code: 'TRY' },
  'Turkmenistan': { symbol: 'T', code: 'TMT' },
  'Tuvalu': { symbol: '$', code: 'AUD' },
  'Uganda': { symbol: 'USh', code: 'UGX' },
  'Ukraine': { symbol: '₴', code: 'UAH' },
  'United Arab Emirates': { symbol: 'د.إ', code: 'AED' },
  'Uruguay': { symbol: '$U', code: 'UYU' },
  'Uzbekistan': { symbol: 'сум', code: 'UZS' },
  'Vanuatu': { symbol: 'Vt', code: 'VUV' },
  'Venezuela': { symbol: 'Bs.', code: 'VES' },
  'Vietnam': { symbol: '₫', code: 'VND' },
  'Yemen': { symbol: '﷼', code: 'YER' },
  'Zambia': { symbol: 'ZK', code: 'ZMW' },
  'Zimbabwe': { symbol: '$', code: 'ZWL' },
};

/**
 * Converts a USD price to the target currency based on mock exchange rates.
 * @param {number} usdPrice The price in USD.
 * @param {string} targetCurrencyCode The 3-letter currency code (e.g., 'INR', 'EUR').
 * @returns {number} The converted price.
 */
export const convertPrice = (usdPrice, targetCurrencyCode) => {
  const rate = MOCK_EXCHANGE_RATES[targetCurrencyCode] || 1.0; // Default to 1.0 if not found
  return usdPrice * rate;
};

/**
 * Gets the currency symbol for a given country name.
 * @param {string} countryName The name of the country.
 * @returns {string} The currency symbol, or '$' as a default.
 */
export const getCurrencySymbol = (countryName) => {
  return COUNTRY_CURRENCY_MAP[countryName]?.symbol || '$';
};